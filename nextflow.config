// ================== Nextflow Config ==================
// Params
params {
  reads        = null          // e.g., '/path/to/fastq/*.fastq.gz'
  assemblies   = null           
  kraken2_db   = null
  gtdbtk_db    = null
  outdir       = 'results'

  // === BANDAGE PARAMETERS ===
  bandage_resolution    = 300
  bandage_annotations   = false  // set true to add labels on images
  
  // === ABRICATE PARAMETERS ===
  abricate_db_dir = '/Users/arundecano/miniforge3/envs/abricate/db'
  abricate_db_amr  = 'ncbi' //'resfinder'
  abricate_db_plm  = 'plasmidfinder'
  enable_abricate_summary      = true
  abricate_summary_topN        = 30
  abricate_summary_gene_column  = 'PRODUCT'

  // === MLST PARAMETERS ===
  mlst_scheme = 'ecoli_achtman_4'

  // === BAKTA PARAMETERS ===
  bakta_db    = '/Users/arundecano/Documents/Github_aedecano_repos/bakta_db/db-light'
  bakta_skip_crispr  = true   // you set this due to PilerCR on ARM
  bakta_skip_tmrna   = false
  bakta_skip_cds     = false  // NOTE: setting true yields 0 CDS and empty .faa/.ffn
  bakta_skip_sorf    = false
  
  // === PANAROO PARAMETERS ===
  run_panaroo              = true
  panaroo_clean_mode       = 'strict'  // 'strict', 'moderate', or 'sensitive'
  panaroo_plot_max_nodes   = 800
  panaroo_plot_top_n       = 10
  panaroo_plot_layout      = 'spring'   // 'spring' or 'kamada'
  panaroo_plot_hub_quantile= 0.95       // 0â€“1; 1 disables hubs
  panaroo_plot_outline     = true
}

// General
workDir = "$HOME/nxf_work"
cleanup = false

process {
  beforeScript = 'umask 022'
  //shell = ['/bin/bash','-ueo','pipefail','-c']
  executor = 'local'
  environment = [
    'CONDA_ALWAYS_YES': 'true',
    'MAMBA_YES':        'true',
    'MAMBA_NO_BANNER':  '1',
    'PYTHONNOUSERSITE': '1'
  ]
}

process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

timeline {
  enabled = true
  file = "${params.outdir}/pipeline_timeline.html"
  overwrite = true
}

report {
  enabled = true
  file = "${params.outdir}/pipeline_report.html"
  overwrite = true
}

trace {
  enabled = true
  file = "${params.outdir}/pipeline_trace.txt"
  overwrite = true
}

dag {
  enabled = true
  file = "${params.outdir}/pipeline_dag.png"
  overwrite = true
}

// Resource presets by label
process {
  errorStrategy = { task.exitStatus in [130,137,140] ? 'retry' : 'terminate' }
  maxRetries    = 1
  maxForks      = 4

  withLabel: 'light' {
    cpus = 2
    memory = 4.GB
    time = 2.h
  }

  withLabel: 'medium' {
    cpus = 8
    memory = 16.GB
    time = 8.h
  }

  withLabel: 'heavy' {
    cpus = 16
    memory = 48.GB
    time = 24.h
  }
}

// -------- Software environments (conda) --------
conda {
  enabled = true
  cacheDir = "$HOME/.conda_envs_nf_cache"
  channels = ['conda-forge', 'bioconda', 'defaults']
  createOptions = '-y'
}

// -------- Profiles --------
profiles {
  conda {
    conda.enabled = true

    process {
      withLabel: 'nanoplot' { conda = 'bioconda::nanoplot=1.42.0' }
      withLabel: 'filtlong' { conda = 'bioconda::filtlong=0.2.1' }
      withLabel: 'flye'     { conda = 'bioconda::flye=2.9.4' }
      withLabel: 'panaroo'  { conda = 'bioconda::panaroo=1.5.4' }
      withLabel: 'bakta'    { conda = 'bioconda::bakta=1.9.4' }
      withLabel: 'kraken2'  { conda = 'bioconda::kraken2=2.1.3' }
      withLabel: 'gtdbtk'   { conda = 'bioconda::gtdbtk=2.4.0' }
      withLabel: 'iqtree2'  { conda = 'bioconda::iqtree=2.3.5' }
      withLabel: 'raxmlng'  { conda = 'bioconda::raxml-ng=1.2.2' }
    }
  }

  // Local Mac / laptop with conda
  mac {
    process.executor = 'local'
    docker.enabled = false
    singularity.enabled = false
    conda.enabled = true
  }

  // SLURM HPC profile
  slurm {
    process.executor = 'slurm'
    queueSize = 50
    conda.enabled = true
    singularity.enabled = false
    docker.enabled = false

    process {
      withLabel: 'light'  { cpus = 2;  memory = 4.GB;  time = 2.h }
      withLabel: 'medium' { cpus = 8;  memory = 16.GB; time = 12.h }
      withLabel: 'heavy'  { cpus = 16; memory = 64.GB; time = 48.h }
    }
  }

  // Docker profile
  docker {
    docker.enabled = true
    singularity.enabled = false
    conda.enabled = false
    process.executor = 'local'
  }

  // Singularity profile
  singularity {
    singularity.enabled = true
    docker.enabled = false
    conda.enabled = false
    process.executor = 'local'
  }
}