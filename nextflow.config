// ================== Nextflow Config ==================
// Params
params {
  reads        = params.reads ?: null
  outdir       = params.outdir ?: "results"
  kraken2_db   = params.kraken2_db ?: null
  gtdbtk_db    = params.gtdbtk_db  ?: null
}

// General
workDir = "work"
cleanup = false

timeline {
  enabled = true
  file = "${params.outdir}/pipeline_timeline.html"
}

report {
  enabled = true
  file = "${params.outdir}/pipeline_report.html"
}

trace {
  enabled = true
  file = "${params.outdir}/pipeline_trace.txt"
}

dag {
  enabled = true
  file = "${params.outdir}/pipeline_dag.png"
}

// Resource presets by label
process {
  errorStrategy = { task.exitStatus in [130,137,140] ? 'retry' : 'terminate' }
  maxRetries    = 1
  maxForks      = 4

  withLabel: 'light' {
    cpus = 2
    memory = 4.GB
    time = 2.h
  }

  withLabel: 'medium' {
    cpus = 8
    memory = 16.GB
    time = 8.h
  }

  withLabel: 'heavy' {
    cpus = 16
    memory = 48.GB
    time = 24.h
  }
}

// -------- Software environments (conda) --------
// Use per-process conda packages. Adjust versions if needed.
conda {
  enabled = true
  cacheDir = "$HOME/.conda_envs_nf_cache"
  channels = ['conda-forge', 'bioconda', 'defaults']
}

process {
  // Core QC/assembly
  withName: NANOPLOT_RAW      { conda = "bioconda::nanoplot" }
  withName: FILTLONG          { conda = "bioconda::filtlong" }
  withName: NANOPLOT_FILT     { conda = "bioconda::nanoplot" }
  withName: FLYE              { conda = "bioconda::flye" }

  // AMR & annotations / pangenome / phylogeny
  withName: ABRICATE          { conda = "bioconda::abricate" }
  withName: BAKTA             { conda = "bioconda::bakta" }
  withName: PANAROO           { conda = "bioconda::panaroo" }
  withName: RAXML_NG          { conda = "bioconda::raxml-ng" }
  withName: IQTREE2           { conda = "bioconda::iqtree" }
  withName: MULTIQC           { conda = "bioconda::multiqc" }

  // New taxonomy processes
  withName: KRAKEN2           { conda = "bioconda::kraken2" }
  withName: GTDBTK_CLASSIFY   { conda = "bioconda::gtdbtk" }
}

// -------- Profiles --------
profiles {

  // Local Mac / laptop with conda
  mac {
    process.executor = 'local'
    docker.enabled = false
    singularity.enabled = false
    conda.enabled = true
  }

  // Generic conda (local) profile
  conda {
    process.executor = 'local'
    docker.enabled = false
    singularity.enabled = false
    conda.enabled = true
  }

  // SLURM HPC profile (adjust to your cluster settings)
  slurm {
    process.executor = 'slurm'
    queueSize = 50
    conda.enabled = true
    singularity.enabled = false
    docker.enabled = false

    // Example SLURM resource mapping; tweak for your site
    process {
      withLabel: 'light'  { cpus = 2;  memory = 4.GB;  time = 2.h }
      withLabel: 'medium' { cpus = 8;  memory = 16.GB; time = 12.h }
      withLabel: 'heavy'  { cpus = 16; memory = 64.GB; time = 48.h }
    }
  }

  // Optional: Docker/Singularity profiles if you later add containers
  docker {
    docker.enabled = true
    singularity.enabled = false
    conda.enabled = false
    process.executor = 'local'
  }

  singularity {
    singularity.enabled = true
    docker.enabled = false
    conda.enabled = false
    process.executor = 'local'
  }
}
